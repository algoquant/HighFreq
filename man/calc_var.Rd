% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calc_var}
\alias{calc_var}
\title{Calculate the variance of the columns of a \emph{matrix} or \emph{time
series} using \code{RcppArmadillo}.}
\usage{
calc_var(t_series)
}
\arguments{
\item{\code{t_series}}{A \emph{time series} or a \emph{matrix} of data.}
}
\value{
A row vector equal to the variance of the columns of \code{t_series}
  matrix.
}
\description{
Calculate the variance of the columns of a \emph{matrix} or \emph{time
series} using \code{RcppArmadillo}.
}
\details{
The function \code{calc_var()} calculates the variance of the
  columns of a \emph{matrix} using \code{RcppArmadillo}. 
  
  The function \code{calc_var()} performs the same calculation as the
  function \code{colVars()} from package
  \href{https://cran.r-project.org/web/packages/matrixStats/index.html}{matrixStats},
  but it's much faster because it uses \code{RcppArmadillo}.
}
\examples{
\dontrun{
# Create a matrix of random returns
re_turns <- matrix(rnorm(5e6), nc=5)
# Compare calc_var() with standard var()
all.equal(drop(HighFreq::calc_var(re_turns)), 
  apply(re_turns, 2, var))
# Compare calc_var() with matrixStats
all.equal(drop(HighFreq::calc_var(re_turns)), 
  matrixStats::colVars(re_turns))
# Compare the speed of RcppArmadillo with matrixStats and with R code
library(microbenchmark)
summary(microbenchmark(
  rcpp=HighFreq::calc_var(re_turns),
  matrixStats=matrixStats::colVars(re_turns),
  rcode=apply(re_turns, 2, var),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}

}
