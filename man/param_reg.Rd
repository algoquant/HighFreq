% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{param_reg}
\alias{param_reg}
\title{Create a named list of model parameters that can be passed into regression
and machine learning functions.}
\usage{
param_reg(
  regmod = "least_squares",
  intercept = TRUE,
  singmin = 1e-05,
  dimax = 0L,
  residscale = "none",
  confl = 0.1,
  alphac = 0
)
}
\arguments{
\item{\code{method}}{A \emph{character string} specifying the type of
regression model (the default is \code{method = "least_squares"}).}

\item{\code{intercept}}{A \emph{Boolean} specifying whether an intercept
term should be added to the predictor (the default is \code{intercept =
TRUE}).}

\item{\code{singmin}}{A \emph{numeric} threshold level for discarding
small \emph{singular values} in order to regularize the inverse of the
predictor matrix (the default is \code{1e-5}).}

\item{\code{dimax}}{An \emph{integer} equal to the number of \emph{singular
values} used for calculating the \emph{reduced inverse} of the
predictor matrix (the default is \code{dimax = 0} - standard matrix
inverse using all the \emph{singular values}).}

\item{\code{confl}}{The confidence level for calculating the quantiles of
returns (the default is \code{confl = 0.75}).}

\item{\code{alphac}}{The shrinkage intensity of \code{returns} (with values
between \code{0} and \code{1} - the default is \code{0}).}
}
\value{
A named list of model parameters that can be passed into regression
and machine learning functions.
}
\description{
Create a named list of model parameters that can be passed into regression
and machine learning functions.
}
\details{
The function \code{param_reg()} creates a named list of model parameters
  that can be passed into regression and machine learning functions.  For
  example into the functions \code{calc_reg()} and \code{roll_reg()}.
  
  The function \code{param_reg()} simplifies the creation of regression
  parameter lists.  The users can create a parameter list with the default
  values, or they can specify custom parameter values.
}
\examples{
\dontrun{
# Create a default list of regression parameters
controlv <- HighFreq::param_reg()
unlist(controlv)
# Create a custom list of regression parameters
controlv <- HighFreq::param_reg(intercept=FALSE, method="regular", dimax=4)
unlist(controlv)
}

}
