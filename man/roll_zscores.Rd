% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{roll_zscores}
\alias{roll_zscores}
\title{Calculate a \emph{vector} of z-scores of the residuals of rolling
regressions at the end points of the design matrix.}
\usage{
roll_zscores(
  response,
  design,
  startp = 0L,
  endp = 0L,
  step = 1L,
  look_back = 1L,
  stub = 0L
)
}
\arguments{
\item{\code{response}}{A single-column \emph{time series} or a \emph{vector}
of response data.}

\item{\code{design}}{A \emph{time series} or a \emph{matrix} of design data
(predictor or explanatory data).}

\item{\code{startp}}{An \emph{integer} vector of start points (the default
is \code{startp = 0}).}

\item{\code{endp}}{An \emph{integer} vector of end points (the default is
\code{endp = 0}).}

\item{\code{step}}{The number of time periods between the end points (the
default is \code{step = 1}).}

\item{\code{look_back}}{The number of end points in the look-back interval
(the default is \code{look_back = 1}).}

\item{\code{stub}}{An \emph{integer} value equal to the first end point for
calculating the end points (the default is \code{stub = 0}).}
}
\value{
A column \emph{vector} of the same length as the number of rows of
  \code{design}.
}
\description{
Calculate a \emph{vector} of z-scores of the residuals of rolling
regressions at the end points of the design matrix.
}
\details{
The function \code{roll_zscores()} calculates a \emph{vector} of z-scores
  of the residuals of rolling regressions at the end points of the
  \emph{time series} \code{design}.
  
  The function \code{roll_zscores()} performs a loop over the end points,
  and at each end point it subsets the time series \code{design} over a
  look-back interval equal to \code{look_back} number of end points.
  
  It passes the subset time series to the function \code{calc_lm()}, which
  calculates the regression data.
  
  If the arguments \code{endp} and \code{startp} are not given then it
  first calculates a vector of end points separated by \code{step} time
  periods. It calculates the end points along the rows of \code{design}
  using the function \code{calc_endpoints()}, with the number of time
  periods between the end points equal to \code{step} time periods.
  
  For example, the rolling variance at \code{25} day end points, with a
  \code{75} day look-back, can be calculated using the parameters
  \code{step = 25} and \code{look_back = 3}.
}
\examples{
\dontrun{
# Calculate historical returns
re_turns <- na.omit(rutils::etf_env$re_turns[, c("IEF", "VTI", "XLF")])
# Response equals IEF returns
res_ponse <- re_turns[, 1]
# Design matrix equals VTI and XLF returns
de_sign <- re_turns[, -1]
# Calculate Z-scores from rolling time series regression using RcppArmadillo
look_back <- 11
z_scores <- HighFreq::roll_zscores(response=res_ponse, design=de_sign, look_back=look_back)
# Calculate z-scores in R from rolling multivariate regression using lm()
z_scoresr <- sapply(1:NROW(de_sign), function(ro_w) {
  if (ro_w == 1) return(0)
  start_point <- max(1, ro_w-look_back+1)
  sub_response <- res_ponse[start_point:ro_w]
  sub_design <- de_sign[start_point:ro_w, ]
  reg_model <- lm(sub_response ~ sub_design)
  resid_uals <- reg_model$residuals
  resid_uals[NROW(resid_uals)]/sd(resid_uals)
})  # end sapply
# Compare the outputs of both functions
all.equal(z_scores[-(1:look_back)], z_scoresr[-(1:look_back)], 
  check.attributes=FALSE)
}

}
