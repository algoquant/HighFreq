% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calc_inv}
\alias{calc_inv}
\title{Calculate the regularized inverse of the covariance \emph{matrix} of returns
using \code{RcppArmadillo}.}
\usage{
calc_inv(mat_rix, max_eigen)
}
\arguments{
\item{\code{mat_rix}}{A \emph{matrix} of returns data.}

\item{\code{max_eigen}}{An \emph{integer} equal to the regularization
intensity (the number of eigenvalues and eigenvectors used for calculating
the regularized inverse).}
}
\value{
A \emph{matrix} equal to the regularized inverse.
}
\description{
Calculate the regularized inverse of the covariance \emph{matrix} of returns
using \code{RcppArmadillo}.
}
\details{
The function calc_inv() calculates the regularized inverse of the
  \emph{covariance matrix}, by truncating the number of eigenvectors to
  \code{max_eigen}. The function \code{calc_inv()} first calculates the
  covariance \emph{matrix} of the \code{mat_rix}, and then it calculates the
  regularized inverse from the truncated eigen decomposition. It uses only
  the largest \code{max_eigen} eigenvalues and their corresponding
  eigenvectors.
}
\examples{
\dontrun{
# Create random matrix
mat_rix <- matrix(rnorm(500), nc=5)
max_eigen <- 3
# Calculate regularized inverse using RcppArmadillo
in_verse <- HighFreq::calc_inv(mat_rix, max_eigen)
# Calculate regularized inverse from eigen decomposition in R
ei_gen <- eigen(cov(mat_rix))
inverse_r <-  ei_gen$vectors[, 1:max_eigen] \%*\% (t(ei_gen$vectors[, 1:max_eigen]) / ei_gen$values[1:max_eigen])
# Compare RcppArmadillo with R
all.equal(in_verse, inverse_r)
}

}
