% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{roll_var}
\alias{roll_var}
\title{Calculate a \emph{matrix} of variance estimates over a rolling look-back
interval for a \emph{matrix} or a \emph{time series}, using
\code{RcppArmadillo}.}
\usage{
roll_var(mat_rix, look_back = 11L)
}
\arguments{
\item{\code{mat_rix}}{A \emph{matrix} or a \emph{time series}.}

\item{\code{look_back}}{The length of the look-back interval, equal to the
number of \emph{matrix} rows used for calculating a single variance
estimate.}
}
\value{
A \emph{matrix} with the same number of rows as the input argument
  \code{mat_rix}.
}
\description{
Calculate a \emph{matrix} of variance estimates over a rolling look-back
interval for a \emph{matrix} or a \emph{time series}, using
\code{RcppArmadillo}.
}
\details{
The function \code{roll_var()} calculates a \code{mat_rix} of
  variance estimates over a rolling look-back interval for a \emph{matrix}
  or a \emph{time series}, using \code{RcppArmadillo}.

  The function \code{roll_var()} performs the same calculation as the
  function \code{roll_var()} from package
  \href{https://cran.r-project.org/web/packages/RcppRoll/index.html}{RcppRoll},
  but it's several times faster because it uses \code{RcppArmadillo}.
}
\examples{
\dontrun{
# Create a matrix of random returns
re_turns <- matrix(rnorm(5e3), nc=5)
# Compare the variance estimates over 11-period lookback intervals
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ], 
  RcppRoll::roll_var(re_turns, n=11))
# Compare the speed of RcppArmadillo with RcppRoll
library(microbenchmark)
summary(microbenchmark(
  RcppArmadillo=HighFreq::roll_var(re_turns, look_back=11),
  RcppRoll=RcppRoll::roll_var(re_turns, n=11),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}
}
