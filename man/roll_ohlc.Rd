% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{roll_ohlc}
\alias{roll_ohlc}
\title{Aggregate a time series to an \emph{OHLC} time series with lower
periodicity.}
\usage{
roll_ohlc(tseries, endd)
}
\arguments{
\item{\code{tseries}}{A \emph{time series} or a \emph{matrix} with multiple
columns of data.}

\item{\emph{endd}}{An \emph{integer vector} of end points.}
}
\value{
A \emph{matrix} with \emph{OHLC} data, with the number of rows equal
  to the number of \emph{endd} minus one.
}
\description{
Given a time series of prices at a higher periodicity (say seconds), it
calculates the \emph{OHLC} prices at a lower periodicity (say minutes).
}
\details{
The function \code{roll_ohlc()} performs a loop over the end points
  \emph{endd}, along the rows of the data \code{tseries}. At each end point,
  it selects the past rows of the data \code{tseries}, starting at the first
  bar after the previous end point, and then calls the function
  \code{agg_ohlc()} on the selected data \code{tseries} to calculate the
  aggregations.
  
  The function \code{roll_ohlc()} can accept either a single column of data
  or four columns of \emph{OHLC} data.
  It can also accept an additional column containing the trading volume.

  The function \code{roll_ohlc()} performs a similar aggregation as the
  function \code{to.period()} from package
  \href{https://cran.r-project.org/web/packages/xts/index.html}{xts}.
}
\examples{
\dontrun{
# Define matrix of OHLC data
ohlc <- rutils::etfenv$VTI[, 1:5]
# Define end points at 25 day intervals
endd <- HighFreq::calc_endpoints(NROW(ohlc), step=25)
# Aggregate over endd:
ohlcagg <- HighFreq::roll_ohlc(tseries=ohlc, endd=endd)
# Compare with xts::to.period()
ohlcagg_xts <- .Call("toPeriod", ohlc, as.integer(endd+1), TRUE, NCOL(ohlc), FALSE, FALSE, colnames(ohlc), PACKAGE="xts")
all.equal(ohlcagg, coredata(ohlcagg_xts), check.attributes=FALSE)
}

}
