% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calc_eigen}
\alias{calc_eigen}
\title{Calculate the eigen decomposition of the covariance \emph{matrix} of returns
using \code{RcppArmadillo}.}
\usage{
calc_eigen(returns)
}
\arguments{
\item{\code{returns}}{A \emph{time series} or \emph{matrix} of returns
data.}
}
\value{
A list with two elements: a \emph{vector} of eigenvalues 
  (named "values"), and a \emph{matrix} of eigenvectors (named
  "vectors").
}
\description{
Calculate the eigen decomposition of the covariance \emph{matrix} of returns
using \code{RcppArmadillo}.
}
\details{
The function \code{calc_eigen()} first calculates the covariance
  \emph{matrix} of the returns, and then calculates its eigen decomposition.
}
\examples{
\dontrun{
# Create matrix of random data
da_ta <- matrix(rnorm(5e6), nc=5)
# Calculate eigen decomposition
ei_gen <- HighFreq::calc_eigen(scale(da_ta, scale=FALSE))
# Calculate PCA
pc_a <- prcomp(da_ta)
# Compare PCA with eigen decomposition
all.equal(pc_a$sdev^2, drop(ei_gen$values))
all.equal(abs(unname(pc_a$rotation)), abs(ei_gen$vectors))
# Compare the speed of Rcpp with R code
summary(microbenchmark(
  Rcpp=HighFreq::calc_eigen(da_ta),
  Rcode=prcomp(da_ta),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}

}
