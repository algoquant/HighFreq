% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{encode_it}
\alias{encode_it}
\title{Calculate the run length encoding of a single-column \emph{time series},
\emph{matrix}, or a \emph{vector}.}
\usage{
encode_it(tseries)
}
\arguments{
\item{\code{tseries}}{A single-column \emph{time series}, \emph{matrix}, or
a \emph{vector}.}
}
\value{
A \emph{list} with two \emph{vectors}: a \emph{vector} of encoded
  data and an \emph{integer vector} of data counts (repeats).
}
\description{
Calculate the run length encoding of a single-column \emph{time series},
\emph{matrix}, or a \emph{vector}.
}
\details{
The function \code{encode_it()} calculates the run length encoding of a
  single-column \emph{time series}, \emph{matrix}, or a \emph{vector}.
  
  The run length encoding of a \emph{vector} consists of two \emph{vectors}:
  a \emph{vector} of encoded data (consecutive data values) and of an
  \emph{integer vector} of the data counts (the number of times the same
  value repeats in succession).
  
  Run length encoding (RLE) is a data compression algorithm which encodes
  the data in two \emph{vectors}: the consecutive data values and their
  counts.  If a data value occurs several times in succession then it is
  recorded only once and its corresponding count is equal to the number of
  times it occurs. Run-length encoding is different from a contingency
  table.
}
\examples{
\dontrun{
# Create a vector of data
datav <- sample(5, 31, replace=TRUE)
# Calculate the run length encoding of datav
HighFreq::encode_it(datav)
}

}
