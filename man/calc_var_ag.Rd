% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calc_var_ag}
\alias{calc_var_ag}
\title{Calculate the variance of returns aggregated over the end points.}
\usage{
calc_var_ag(tseries, step = 1L)
}
\arguments{
\item{\code{tseries}}{A \emph{time series} or a \emph{matrix} of prices.}

\item{\code{step}}{The number of time periods in each interval between
neighboring end points (the default is \code{step = 1}).}
}
\value{
The variance of aggregated returns.
}
\description{
Calculate the variance of returns aggregated over the end points.
}
\details{
The function \code{calc_var_ag()} calculates the variance of returns
  aggregated over the end points.

  It first calculates the end points spaced apart by the number of periods
  equal to the argument \code{step}.  Then it calculates the aggregated
  returns by differencing the prices \code{tseries} calculated at the end
  points. Finally it calculates the variance of the returns.

  The choice of the first end point is arbitrary, so \code{calc_var_ag()}
  calculates the different end points for all the possible starting points.
  It then calculates the variance values for all the different end points
  and averages them.

  The aggregated volatility \eqn{\sigma_t} increases with the length of the
  aggregation interval \eqn{\Delta t}.
  The aggregated volatility increases as the length of the aggregation
  interval \eqn{\Delta t} raised to the power of the \emph{Hurst exponent}
  \eqn{H}:
    \deqn{
      \sigma_t = \sigma {\Delta t}^H
    }
  Where \eqn{\sigma} is the daily return volatility.

  The function \code{calc_var_ag()} can therefore be used to calculate the
  \emph{Hurst exponent} from the variance ratio.
}
\examples{
\dontrun{
# Calculate the log prices
prices <- na.omit(rutils::etfenv$prices[, c("XLP", "VTI")])
prices <- log(prices)
# Calculate the daily variance of percentage returns
calc_var_ag(prices, step=1)
# Calculate the daily variance using R
sapply(rutils::diffit(prices), var)
# Calculate the variance of returns aggregated over 21 days
calc_var_ag(prices, step=21)
# The variance over 21 days is approximately 21 times the daily variance
21*calc_var_ag(prices, step=1)
}

}
