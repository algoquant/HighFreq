% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HighFreq.R
\name{roll_backtest}
\alias{roll_backtest}
\title{Perform a backtest simulation of a trading strategy (model) over a vector of
end points along a time series of prices.}
\usage{
roll_backtest(
  xtsv,
  train_func,
  trade_func,
  look_back = look_forward,
  look_forward,
  endpoints = rutils::calc_endpoints(xtsv, look_forward),
  ...
)
}
\arguments{
\item{...}{additional parameters to the functions \code{train_func()} and
\code{trade_func()}.}

\item{\code{xtsv}}{A time series of prices, asset returns, trading volumes, and
other data, in \emph{xts} format.}

\item{\code{train_func}}{The name of the function for training (calibrating) a
forecasting model, to be applied over a rolling look-back interval.}

\item{\code{trade_func}}{The name of the trading model function, to be applied over
a rolling look-forward interval.}

\item{\code{look_back}}{The size of the look-back interval, equal to the number of
rows of data used for training the forecasting model.}

\item{\code{look_forward}}{The size of the look-forward interval, equal to the number
of rows of data used for trading the strategy.}

\item{\code{endpoints}}{A vector of end points along the rows of the \code{xtsv}
time series, given as either integers or dates.}
}
\value{
An \emph{xts} time series with the number of rows equal to the number
  of end points minus two.
}
\description{
Perform a backtest simulation of a trading strategy (model) over a vector of
end points along a time series of prices.
}
\details{
The function \code{roll_backtest()} performs a rolling backtest 
  simulation of a trading strategy over a vector of end points. At each end 
  point, it trains (calibrates) a forecasting model using past data taken 
  from the \code{xtsv} time series over the look-back interval, and applies
  the forecasts to the \code{trade_func()} trading model, using out-of-sample
  future data from the look-forward interval.
  
  The function \code{trade_func()} should simulate the trading model, and it 
  should return a named list with at least two elements: a named vector of 
  performance statistics, and an \emph{xts} time series of out-of-sample 
  returns.  The list returned by \code{trade_func()} can also have additional
  elements, like the in-sample calibrated model statistics, etc.

  The function \code{roll_backtest()} returns a named list containing the
  listv returned by function \code{trade_func()}.  The list names are equal
  to the \emph{endpoints} dates. 
  The number of list elements is equal to the number of \emph{endpoints}
  minus two (because the first and last end points can't be included in the
  backtest).
}
\examples{
\dontrun{
# Combine two time series of prices
prices <- cbind(rutils::etfenv$XLU, rutils::etfenv$XLP)
look_back <- 252
look_forward <- 22
# Define end points
endpoints <- rutils::calc_endpoints(prices, look_forward)
# Perform back-test
back_test <- roll_backtest(endpoints=endpoints,
    look_forward=look_forward,
    look_back=look_back,
    train_func = train_model,
    trade_func = trade_model,
    model_params = model_params,
    trading_params = trading_params,
    xtsv=prices)
}
}
