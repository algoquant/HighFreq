Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
oh_lc <- coredata(rutils::etf_env$VTI[, 1:5])
all.equal(drop(HighFreq::agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 2]), min(oh_lc[, 3]), oh_lc[NROW(oh_lc), 4], sum(oh_lc[, 5])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, c(1, 5)])
all.equal(drop(HighFreq::agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
tail(oh_lc)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
oh_lc <- coredata(rutils::etf_env$VTI[, c(1, 5)])
all.equal(drop(HighFreq::agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, c(1, 5)])
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
drop(agg_ohlc(oh_lc))
dim(oh_lc)
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 2]), min(oh_lc[, 3]), oh_lc[NROW(oh_lc), 4], sum(oh_lc[, 5])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, 1:5])
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 2]), min(oh_lc[, 3]), oh_lc[NROW(oh_lc), 4], sum(oh_lc[, 5])),
check.attributes=FALSE)
drop(agg_ohlc(oh_lc))
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
drop(agg_ohlc(oh_lc))
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
drop(agg_ohlc(oh_lc))
dim(oh_lc)
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 2]), min(oh_lc[, 3]), oh_lc[NROW(oh_lc), 4], sum(oh_lc[, 5])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, 1:5])
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, c(1, 5)])
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1], sum(oh_lc[, 2])),
check.attributes=FALSE)
oh_lc <- coredata(rutils::etf_env$VTI[, 1])
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1]),
check.attributes=FALSE)
all.equal(drop(agg_ohlc(oh_lc)),
c(oh_lc[1, 1], max(oh_lc[, 1]), min(oh_lc[, 1]), oh_lc[NROW(oh_lc), 1]),
check.attributes=FALSE)
drop(agg_ohlc(oh_lc))
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
oh_lc <- rutils::etf_env$VTI[, 1:5]
end_points <- rutils::calc_endpoints(oh_lc, inter_val=25)
foo <- HighFreq::to_period(oh_lc[, 1:5], end_points-1)
# bar <- rutils::to_period(oh_lc[, 1:5], end_points=end_points)
bar <- .Call("toPeriod", oh_lc, as.integer(end_points), TRUE, NCOL(oh_lc), FALSE, FALSE, colnames(oh_lc), PACKAGE="xts")
all.equal(foo, coredata(bar), check.attributes=FALSE)
library(microbenchmark)
summary(microbenchmark(
rcpp=HighFreq::to_period(oh_lc[, 1:5], end_points-1),
rcode=rutils::to_period(oh_lc[, 1:5], end_points=end_points),
times=10))[, c(1, 4, 5)]  # end microbenchmark summary
summary(microbenchmark(
rcpp=HighFreq::to_period(oh_lc[, 1:5], end_points-1),
rcode=rutils::to_period(oh_lc[, 1:5], end_points=end_points),
times=10))[, c(1, 4, 5)]  # end microbenchmark summary
oh_lc <- coredata(rutils::etf_env$VTI[, c(1, 5)])
end_points <- rutils::calc_endpoints(oh_lc, inter_val=25)
foo <- HighFreq::to_period(oh_lc[, 1:5], end_points-1)
oh_lc <- rutils::etf_env$VTI[, 1:5]
end_points <- rutils::calc_endpoints(oh_lc, inter_val=25)
foo <- HighFreq::to_period(oh_lc, end_points-1)
bar <- .Call("toPeriod", oh_lc, as.integer(end_points), TRUE, NCOL(oh_lc), FALSE, FALSE, colnames(oh_lc), PACKAGE="xts")
all.equal(foo, coredata(bar), check.attributes=FALSE)
summary(microbenchmark(
rcpp=HighFreq::to_period(oh_lc, end_points-1),
rcode=rutils::to_period(oh_lc, end_points=end_points),
times=10))[, c(1, 4, 5)]  # end microbenchmark summary
summary(microbenchmark(
rcpp=HighFreq::to_period(oh_lc, end_points-1),
rcode=rutils::to_period(oh_lc, end_points=end_points),
times=10))[, c(1, 4, 5)]  # end microbenchmark summary
library(HighFreq)
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
oh_lc <- rutils::etf_env$VTI[, 1:5]
end_points <- HighFreq::calc_endpoints(oh_lc, inter_val=25)
end_points <- HighFreq::calc_endpoints(oh_lc, agg=25)
end_points <- rutils::calc_endpoints(oh_lc, inter_val=25)
foo <- HighFreq::calc_endpoints(NROW(oh_lc), agg=25)
foo
foo <- drop(foo)
end_points
foo
all.equal(end_points, foo+1)
dim(oh_lc)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
foo <- roll_var(coredata(rutils::etf_env$VTI[1:100, ]), look_back=3, ste_p=5)
foo
foo <- drop(foo)
foo
foo <- foo+1
foo
HighFreq::calc_endpoints(11, 1)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
re_turns <- coredata(rutils::etf_env$VTI[, 4])
dim(re_turns)
re_turns <- na.omit(re_turns)
dim(re_turns)
re_turns <- coredata(na.omit(rutils::etf_env$re_turns$VTI))
dim(re_turns)
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ],
RcppRoll::roll_var(re_turns, n=11))
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ],
RcppRoll::roll_var(re_turns, n=11), check.attributes=FALSE)
all.equal(drop(HighFreq::roll_var(re_turns, look_back=11))[-(1:10)],
RcppRoll::roll_var(re_turns, n=11), check.attributes=FALSE)
all.equal(drop(HighFreq::roll_var(re_turns, look_back=11))[-(1:10)],
drop(RcppRoll::roll_var(re_turns, n=11)), check.attributes=FALSE)
foo <- HighFreq::roll_var(re_turns, look_back=11)
head(foo, 13)
head(RcppRoll::roll_var(re_turns, n=11), 13)
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ],
RcppRoll::roll_var(re_turns, n=11), check.attributes=FALSE)
class(foo)
foo <- RcppRoll::roll_var(re_turns, n=11)
class(foo)
head(foo, 13)
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)), check.attributes=FALSE)
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)), check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=11)
head(end_p)
str(rutils::calc_endpoints)
NROW(re_turns)
NROW(end_p)
tail(end_p)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
all.equal(HighFreq::roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
foo <- start_points(re_turns, look_back=11)
head(foo)
foo <- drop(foo)
tail(foo)
NROW(re_turns)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
foo <- start_points(re_turns, look_back=11)
foo <- drop(foo)
head(foo, 15)
tail(foo)
NROW(foo)
NROW(re_turns)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(1, 1, 1, end_p[1:(n_rows-3)])
tail(start_p)
tail(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
tail(end_p)
tail(start_p)
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
tail(foo)
dim(re_turns)
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, bar, check.attributes=FALSE)
all.equal(foo, drop(bar), check.attributes=FALSE)
foo <- cbind(foo, bar)
tail(foo)
head(foo, 22)
drop(head(re_turns))
dim(foo)
start_p(foo)
head(start_p)
head(end_p)
all.equal(foo[-1], drop(bar)[-1], check.attributes=FALSE)
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
all.equal(foo[-1], drop(bar)[-1], check.attributes=FALSE)
foo <- HighFreq::calc_endpoints(NROW(re_turns), 5)
head(foo)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
re_turns <- coredata(na.omit(rutils::etf_env$re_turns$VTI))
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
library(HighFreq)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
re_turns <- coredata(na.omit(rutils::etf_env$re_turns$VTI))
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
end_p <- HighFreq::calc_endpoints(25, 5)
end_p
start_p <- HighFreq::calc_startpoints(end_p, 2)
start_p
drop(end_p)
drop(start_p)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
install.packages('tinytex')
tinytex::install_tinytex()
tinytex:::is_tinytex()
q()
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
library(HighFreq)
re_turns <- coredata(na.omit(rutils::etf_env$re_turns$VTI))
all.equal(roll_var(re_turns, look_back=11)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
start_p <- c(0, 0, 0, end_p[1:(n_rows-3)]) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
bar <- HighFreq::roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
end_p <- HighFreq::calc_endpoints(re_turns, inter_val=5)
n_rows <- NROW(end_p)
end_p <- HighFreq::calc_endpoints(NROW(re_turns), ste_p=5)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
end_p <- rutils::calc_endpoints(re_turns, inter_val=5)
foo <- HighFreq::calc_endpoints(NROW(re_turns), ste_p=5)
all.equal(foo, end_p, check.attributes=FALSE)
end_p
foo <- drop(HighFreq::calc_endpoints(NROW(re_turns), ste_p=5))
all.equal(foo, end_p, check.attributes=FALSE)
foo <- cbind(foo, end_p)
head(foo)
foo <- drop(HighFreq::calc_endpoints(NROW(re_turns), ste_p=5)) + 1
all.equal(foo, end_p, check.attributes=FALSE)
all.equal(HighFreq::roll_var(re_turns, look_back=11, ste_p=1)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
library(HighFreq)
all.equal(HighFreq::roll_var(re_turns, look_back=11, ste_p=1)[-(1:10), ],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
all.equal(drop(HighFreq::roll_var(re_turns, look_back=11, ste_p=1))[-(1:10)],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
all.equal(drop(HighFreq::roll_var(re_turns, look_back=11, ste_p=1))[-(1:10)],
RcppRoll::roll_var(re_turns, n=11),
check.attributes=FALSE)
all.equal(HighFreq::roll_var(re_turns, look_back=11, ste_p=1)[-(1:10), ],
RcppRoll::roll_var(re_turns, n=11),
check.attributes=FALSE)
end_p <- drop(HighFreq::calc_endpoints(NROW(re_turns), ste_p=5)) + 1
n_rows <- NROW(end_p)
# start_p <- c(0, 0, 0, end_p[1:(n_rows-3)])
start_p <- drop(HighFreq::calc_startpoints(NROW(re_turns), look_back=3)) + 1
# start_p <- c(0, 0, 0, end_p[1:(n_rows-3)])
start_p <- drop(HighFreq::calc_startpoints(end_p, look_back=3)) + 1
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- HighFreq::roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
foo <- cbind(foo, end_p)
head(foo)
tail(bar)
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- HighFreq::roll_var(re_turns, look_back=3, ste_p=5)
foo <- cbind(foo, bar)
head(foo)
tail(foo)
start_p <- drop(HighFreq::calc_startpoints(end_p, look_back=3))
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- HighFreq::roll_var(re_turns, look_back=3, ste_p=5)
all.equal(foo, drop(bar), check.attributes=FALSE)
re_turns <- na.omit(rutils::etf_env$re_turns$VTI)
all.equal(drop(HighFreq::roll_var(re_turns, ste_p=1, look_back=11))[-(1:10)],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
end_p <- drop(HighFreq::calc_endpoints(NROW(re_turns), ste_p=5)) + 1
n_rows <- NROW(end_p)
# start_p <- c(0, 0, 0, end_p[1:(n_rows-3)])
start_p <- drop(HighFreq::calc_startpoints(end_p, look_back=3))
foo <- sapply(1:n_rows, function(ep) {
var(re_turns[start_p[ep]:end_p[ep]])
})  # end sapply
bar <- HighFreq::roll_var(re_turns, ste_p=5, look_back=3)
all.equal(foo, drop(bar), check.attributes=FALSE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
oh_lc <- rutils::etf_env$VTI[, c(1, 5)]
var_rolling <- HighFreq::roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
in_dex <- c(1, diff(xts::.index(oh_lc)))
var_rolling <- HighFreq::roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- HighFreq::roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
scal_e=TRUE)
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- calc_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- calc_var_ohlc(oh_lc,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- calc_var_ohlc(oh_lc,
calc_method="yang_zhang",
scal_e=TRUE)
var_rolling <- calc_var_ohlc(oh_lc, calc_method="yang_zhang")
var_rolling <- calc_var_ohlc(oh_lc)
dim(oh_lc)
oh_lc <- rutils::etf_env$VTI[, 1:4]
var_rolling <- calc_var_ohlc(oh_lc)
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- calc_var_ohlc(oh_lc, calc_method="yang_zhang")
var_rolling <- calc_var_ohlc(oh_lc,
calc_method="yang_zhang",
scal_e=TRUE)
var_rolling
var_rolling <- calc_var_ohlc(oh_lc,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- HighFreq::roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
dim(var_rolling)
var_rolling <- drop(var_rolling)
tail(var_rolling)
head(var_rolling)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
var_rolling <- HighFreq::roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
var_rolling <- roll_var_ohlc(oh_lc,
look_back=21,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
dim(oh_lc)
dim(re_turns)
all.equal(drop(HighFreq::roll_var(re_turns, ste_p=1, look_back=11))[-(1:10)],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
all.equal(drop(roll_var(re_turns, ste_p=1, look_back=11))[-(1:10)],
drop(RcppRoll::roll_var(re_turns, n=11)),
check.attributes=FALSE)
var_rolling <- roll_var_ohlc(oh_lc, ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- roll_var_ohlc(oh_lc[1:31, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- drop(var_rolling)
head(var_rolling)
tail(var_rolling)
var_rolling <- roll_var_ohlc(oh_lc[1:51, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
var_rolling <- roll_var_ohlc(oh_lc[1:51, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_temp.cpp")
var_rolling <- roll_var_ohlc(oh_lc[1:51, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- roll_var_ohlc(oh_lc[1:31, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
var_rolling <- roll_var_ohlc(oh_lc[1:131, ], ste_p = 2,
look_back=5,
calc_method="yang_zhang",
in_dex=in_dex,
scal_e=TRUE)
q()
