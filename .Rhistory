download.file("https://api.polygon.io/v2/aggs/ticker/SPY/range/1/minute/2021-05-24/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/spy.json")
sp_y <- jsonlite::read_json("C:/Develop/data/polygon/spy.json")
sp_y <- sp_y$results
sp_y <- jsonlite::toJSON(sp_y)
sp_y <- jsonlite::fromJSON(sp_y)
sp_y <- lapply(sp_y, unlist)
sp_y <- do.call(cbind, sp_y)
date_s <- sp_y[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
sp_y <- sp_y[, c("o","h","l","c","v","vw")]
colnames(sp_y) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
sp_y <- xts::xts(sp_y, order.by=date_s)
spy7 <- sp_y
save(spy1, spy2, spy3, spy4, spy5, spy6, spy7, file="C:/Develop/data/polygon/spy.RData")
tail(spy1)
foo <- index(tail(spy1))
library(HighFreq)
foo <- index(tail(spy1))
foo
bar <- index(spy2)
head(bar)
last(foo)
match(last(foo), bar)
foo <- match(last(foo), bar)
tail(spy1)
spy2[(foo-3):(foo+5)]
foo
sp_y <- spy1
paste0("spy", 2)
foo <- get(paste0("spy", 2))
all.equal(foo, spy2)
it <- 2
da_ta <- get(paste0("spy", it))
index(last(da_ta))
index(last(sp_y))
sp_y <- rbind(spy1, spy2)
dim(sp_y)
sp_y <- make.index.unique(sp_y)
dim(sp_y)
?duplicated
sp_y <- rbind(spy1, spy2)
dim(sp_y)
sp_y <- sp_y[!duplicated(index(sp_y), fromLast=TRUE ), ]
dim(sp_y)
sp_y <- spy1
for (it in 2:7) {
sp_y <- rbind(sp_y, get(paste0("spy", it)))
sp_y <- sp_y[!duplicated(index(sp_y), fromLast=TRUE), ]
}  # end for
dim(sp_y)
tail(sp_y)
dygraph(tail(sp_y$VWAP, 1e4))
dygraph(tail(sp_y$Close, 1e4))
save(sp_y, file="C:/Develop/data/polygon/spy_minutes.RData")
foo <- lapply(1:7, function(it) get(paste0("spy", it)))
foo <- do.call(foo, rbind)
foo <- do.call(rbind, foo)
foo <- foo[!duplicated(index(foo)), ]
all.equal(spy, foo)
all.equal(sp_y, foo)
foo <- lapply(1:7, function(it) get(paste0("spy", it)))
foo <- do.call(rbind, foo)
foo <- foo[!duplicated(index(foo), fromLast=TRUE), ]
all.equal(sp_y, foo)
foo <- rutils::etf_env$VTI
foo <- rutils::etf_env$VTI["/2015"]
bar <- rutils::etf_env$VTI["2014/"]
foo <- rbind(foo, bar)
sum(duplicated(index(foo)))
foo <- foo[!duplicated(index(foo), fromLast=TRUE), ]
all.equal(rutils::etf_env$VTI, foo)
foo <- rutils::etf_env$VTI["/2015"]
bar <- rutils::etf_env$VTI["2014/"]
foo <- rbind(foo, bar)
sum(duplicated(index(foo)))
foo <- foo[!duplicated(index(foo)), ]
all.equal(rutils::etf_env$VTI, foo)
foo <- lapply(1:7, function(it) get(paste0("spy", it)))
foo <- do.call(rbind, foo)
foo <- foo[!duplicated(index(foo)), ]
bar <- foo[!duplicated(index(foo), fromLast=TRUE), ]
all.equal(foo, bar)
foo <- rutils::etf_env$VTI["/2015"]
bar <- rutils::etf_env$VTI["2014/"]
foo <- rbind(foo, bar[!(index(bar) %in% index(foo))])
all.equal(rutils::etf_env$VTI, foo)
foo <- rutils::etf_env$VTI["/2015"]
bar <- rutils::etf_env$VTI["2014/"]
foo <- rbind(foo, bar)
sum(duplicated(index(foo)))
foo <- foo[!duplicated(index(foo)), ]
all.equal(rutils::etf_env$VTI, foo)
library(microbenchmark)
foo <- rutils::etf_env$VTI["/2015"]
bar <- rutils::etf_env$VTI["2014/"]
summary(microbenchmark(
ro_ll={foo <- rbind(foo, bar); foo[!duplicated(index(foo)), ]},
rcpp_roll=rbind(foo, bar[!(index(bar) %in% index(foo))]),
times=10))[, c(1, 4, 5)]
foo <- lapply(1:7, function(it) get(paste0("spy", it)))
foo <- do.call(rbind, foo)
foo <- foo[!duplicated(index(foo)), ]
bar <- foo[!duplicated(index(foo), fromLast=TRUE), ]
all.equal(foo, bar)
sp_y <- foo
save(sp_y, file="C:/Develop/data/polygon/spy_minutes.RData")
sum(duplicated(index(foo)))
as.POSIXct(1627053806, origin="1970-01-01")
as.POSIXct(1627053807, origin="1970-01-01")
data_10 <- read.csv(file="C:/Develop/lecture_slides/data/etf_prices_crsp.csv", nrows=10)
data_20 <- read.csv(con_read, nrows=10, header=FALSE)
data_20 <- read.csv(file="C:/Develop/lecture_slides/data/etf_prices_crsp.csv", nrows=10, header=FALSE)
data_10
data_20
vti1 <- rutils::etf_env$VTI["/2015"]
vti2 <- rutils::etf_env$VTI["2014/"]
vti1 <- rbind(vti1, vti2)
sum(duplicated(index(vti1)))
vti1 <- vti1[!duplicated(index(vti1)), ]
all.equal(rutils::etf_env$VTI, vti1)
rm(vti1, vti2)
vti1 <- rutils::etf_env$VTI["/2015"]
vti2 <- rutils::etf_env$VTI["2014/"]
vt_i <- rbind(vti1, vti2)
sum(duplicated(index(vt_i)))
vti1 <- vti1[!duplicated(index(vt_i)), ]
all.equal(vt_i, rutils::etf_env$VTI)
vti1 <- rutils::etf_env$VTI["/2015"]
vti2 <- rutils::etf_env$VTI["2014/"]
vt_i <- rbind(vti1, vti2)
sum(duplicated(index(vt_i)))
vt_i <- vt_i[!duplicated(index(vt_i)), ]
all.equal(vt_i, rutils::etf_env$VTI)
vt_i <- rbind(vti1, vti2[!(index(vti2) %in% index(vti1))])
all.equal(vt_i, rutils::etf_env$VTI)
vt_i <- rbind(vti1, vti2)
vt_i <- vt_i[!duplicated(index(vt_i)), ]
vti_fl <- vt_i[!duplicated(index(vt_i), fromLast=TRUE), ]
all.equal(foo, vti_fl)
vt_i <- rbind(vti1, vti2)
vt_i <- vt_i[!duplicated(index(vt_i)), ]
all.equal(vt_i, rutils::etf_env$VTI)
vt_i <- rbind(vti1, vti2)
vt_i <- vt_i[!duplicated(index(vt_i)), ]
vti_fl <- vt_i[!duplicated(index(vt_i), fromLast=TRUE), ]
all.equal(vt_i, vti_fl)
library(shiny); runApp('C:/Develop/presentations/app_ewma_volume_scaled_strat.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
oh_lc <- sp_y["T09:00:00/T16:30:00"]
dim(oh_lc)
tail(oh_lc)
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
vol_ume <- Vo(oh_lc())
vol_ume <- Vo(oh_lc)
vol_ume <- Cl(oh_lc)
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
all.equal(sp_y, oh_lc)
oh_lc <- sp_y
save(oh_lc, file="C:/Develop/data/polygon/spy_minutes.RData")
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
ls()
dim(vti1)
head(rutils::lag_it(vti1))
head(rutils::lag_it(vti1, pad_zeros=FALSE))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
rm(list = ls())
sym_bol <- "SPY"
short_back <- 5
lagg <- 1
thresh_old <- 0.9
add_annotations <- "False"
load(file="C:/Develop/data/polygon/spy_minutes.RData")
oh_lc <- oh_lc["T09:00:00/T16:30:00"]
ls()
clos_e <- log(Cl(oh_lc))
re_turns <- rutils::diff_it(clos_e)
vol_ume <- Vo(oh_lc)
vol_ume <- short_back*vol_ume/HighFreq::roll_sum(vol_ume, look_back=short_back)
vol_ume <- rutils::lag_it(vol_ume, pad_zeros=FALSE)
re_turns <- re_turns/vol_ume
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
HighFreq::roll_sum
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
vol_ume <- Vo(oh_lc)
clos_e <- log(Cl(oh_lc))
re_turns <- rutils::diff_it(clos_e)
re_turns <- re_turns/vol_ume
vol_ume <- Vo(oh_lc)
vol_ume <- rutils::lag_it(vol_ume, pad_zeros=FALSE)
clos_e <- log(Cl(oh_lc))
re_turns <- rutils::diff_it(clos_e)
re_turns <- re_turns/vol_ume
re_turns <- rutils::diff_it(clos_e)
re_turns <- ifelse(vol_ume > 0, re_turns/vol_ume, 0)
cum_scaled <- cumsum(re_turns)
mi_n <- roll::roll_min(cum_scaled, width=short_back)
ma_x <- roll::roll_max(cum_scaled, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*cum_scaled - mi_n - ma_x)/(ma_x - mi_n), 0)
x11(width=6, height=5)
hist(z_scores, breaks=2000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/minute/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/minute/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/svxy/range/1/minute/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vti/range/1/minute/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/spy/range/1/minute/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=cLXNCKw8fCkvrNAoLboAIwsET0wkL3QD", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=cLXNCKw8fCkvrNAoLboAIwsET0wkL3QD", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=tqlcSbfUd8j5w6bq8n2o4BS70NrGi1fI", "C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
download.file("https://api.polygon.io/v2/aggs/ticker/vxx/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/vxx.json")
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
sapply(oh_lc, class)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
class(oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
tail(oh_lc)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ohlc1 <- oh_lc
ls()
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ohlc1 <- oh_lc
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
head(date_s)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ohlc2 <- oh_lc
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ohlc3 <- oh_lc
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ohlc4 <- oh_lc
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ls()
ohlc5 <- oh_lc
tail(date_s)
oh_lc <- jsonlite::read_json("C:/Develop/data/polygon/vxx.json")
oh_lc <- oh_lc$results
oh_lc <- jsonlite::toJSON(oh_lc)
oh_lc <- jsonlite::fromJSON(oh_lc)
oh_lc <- lapply(oh_lc, unlist)
oh_lc <- do.call(cbind, oh_lc)
date_s <- oh_lc[, "t"]/1e3
date_s <- as.POSIXct(date_s, origin="1970-01-01")
tail(date_s)
oh_lc <- oh_lc[, c("o","h","l","c","v","vw")]
colnames(oh_lc) <- c("Open", "High", "Low", "Close", "Volume", "VWAP")
oh_lc <- xts::xts(oh_lc, order.by=date_s)
ls()
ohlc6 <- oh_lc
oh_lc <- lapply(1:6, function(it) get(paste0("ohlc", it)))
oh_lc <- do.call(rbind, oh_lc)
oh_lc <- oh_lc[!duplicated(index(oh_lc)), ]
save(oh_lc, file="C:/Develop/data/polygon/vxx_minutes.RData")
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
download.file("https://api.polygon.io/v2/aggs/ticker/SPY/range/1/day/2020-01-01/2021-07-20?adjusted=true&sort=asc&limit=50000&apiKey=J2M4jq6ltDM7c9VlboKAFIUklyxvpIdX", "C:/Develop/data/polygon/spy.json")
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
rm(list = ls())
load(file="C:/Develop/data/polygon/spy_minutes.RData")
oh_lc <- oh_lc["T09:00:00/T16:30:00"]
clos_e <- log(Cl(oh_lc))
re_turns <- rutils::diff_it(clos_e)
short_back <- 15
vol_ume <- Vo(oh_lc)
vol_ume <- short_back*vol_ume/HighFreq::roll_sum(vol_ume, look_back=short_back)
vol_ume <- rutils::lag_it(vol_ume, pad_zeros=FALSE)
re_turns <- ifelse(vol_ume > 0, re_turns/vol_ume, 0)
cum_scaled <- cumsum(re_turns)
mi_n <- roll::roll_min(cum_scaled, width=short_back)
ma_x <- roll::roll_max(cum_scaled, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*cum_scaled - mi_n - ma_x)/(ma_x - mi_n), 0)
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat.R')
ls()
dim(oh_lc)
foo <- HighFreq::roll_sum(oh_lc, look_back=11)
bar <- sapply(oh_lc, HighFreq::roll_sum, look_back=11)
all.equal(foo, bar)
head(foo)
head(bar)
all.equal(foo, bar, check.attributes=FALSE)
tail(bar)
rm(list = ls())
load(file="C:/Develop/data/polygon/spy_minutes.RData")
oh_lc <- oh_lc["T09:00:00/T16:30:00"]
hi_gh <- Hi(oh_lc)
lo_w <- Lo(oh_lc)
clos_e <- Cl(oh_lc)
re_turns <- rutils::diff_it(clos_e)
short_back <- 5
mi_n <- roll::roll_min(lo_w, width=short_back)
ma_x <- roll::roll_max(hi_gh, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*cum_scaled - mi_n - ma_x)/(ma_x - mi_n), 0)
z_scores <- ifelse(ma_x > mi_n, (2*clos_e - mi_n - ma_x)/(ma_x - mi_n), 0)
sd(z_scores)
mad(z_scores)
short_back <- 15
mi_n <- roll::roll_min(lo_w, width=short_back)
ma_x <- roll::roll_max(hi_gh, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*clos_e - mi_n - ma_x)/(ma_x - mi_n), 0)
sd(z_scores)
mad(z_scores)
short_back <- 5
mi_n <- roll::roll_min(lo_w, width=short_back)
ma_x <- roll::roll_max(hi_gh, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*clos_e - mi_n - ma_x)/(ma_x - mi_n), 0)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
x11(width=6, height=5)
short_back <- 25
mi_n <- roll::roll_min(lo_w, width=short_back)
ma_x <- roll::roll_max(hi_gh, width=short_back)
mi_n[1:short_back, ] <- 0
ma_x[1:short_back, ] <- 1
mi_n <- rutils::lag_it(mi_n, pad_zeros=FALSE)
ma_x <- rutils::lag_it(ma_x, pad_zeros=FALSE)
z_scores <- ifelse(ma_x > mi_n, (2*clos_e - mi_n - ma_x)/(ma_x - mi_n), 0)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
short_back
long_back <- 100
lamb_da <- 0.9
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
weight_s
sum(weight_s)
short_back
long_back <- 21
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
weight_s
long_back <- 11
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
weight_s
lamb_da <- 0.5
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
weight_s
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
ls()
ohlc_roll <- HighFreq::roll_conv(oh_lc, weight_s)
tail(oh_lc)
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
matrix(weight_s)
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
ohlc_roll <- HighFreq::roll_conv(oh_lc, matrix(weight_s))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
short_back <- 15
long_back <- 15
lamb_da <- 0.9
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
hi_gh <- Hi(oh_lc)
lo_w <- Lo(oh_lc)
clos_e <- Cl(oh_lc)
vol_at <- HighFreq::roll_conv(hi_gh-lo_w, matrix(weight_s))
vol_at <- rutils::lag_it(vol_at, pad_zeros=FALSE)
close_w <- HighFreq::roll_conv(clos_e, matrix(weight_s))
close_w <- rutils::lag_it(close_w, pad_zeros=FALSE)
z_scores <- ifelse(vol_at, (clos_e - close_w)/vol_at, 0)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
lamb_da <- 0.1
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
vol_at <- HighFreq::roll_conv(hi_gh-lo_w, matrix(weight_s))
vol_at <- rutils::lag_it(vol_at, pad_zeros=FALSE)
close_w <- HighFreq::roll_conv(clos_e, matrix(weight_s))
close_w <- rutils::lag_it(close_w, pad_zeros=FALSE)
z_scores <- ifelse(vol_at, (clos_e - close_w)/vol_at, 0)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
class(z_scores)
z_scores <- HighFreq::roll_conv(matrix(z_scores), matrix(weight_s))
z_scores <- rutils::lag_it(z_scores, pad_zeros=FALSE)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
lamb_da <- 0.1
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
vol_at <- HighFreq::roll_conv(hi_gh-lo_w, matrix(weight_s))
vol_at <- rutils::lag_it(vol_at, pad_zeros=FALSE)
close_w <- HighFreq::roll_conv(clos_e, matrix(weight_s))
close_w <- rutils::lag_it(close_w, pad_zeros=FALSE)
z_scores <- ifelse(vol_at, (clos_e - close_w)/vol_at, 0)
z_scores <- HighFreq::roll_conv(matrix(z_scores), matrix(weight_s))
z_scores <- rutils::lag_it(z_scores, pad_zeros=FALSE)
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
weight_s
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
lamb_da <- 0.05
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
vol_at <- HighFreq::roll_conv(hi_gh-lo_w, matrix(weight_s))
vol_at <- rutils::lag_it(vol_at, pad_zeros=FALSE)
close_w <- HighFreq::roll_conv(clos_e, matrix(weight_s))
close_w <- rutils::lag_it(close_w, pad_zeros=FALSE)
z_scores <- ifelse(vol_at, (clos_e - close_w)/vol_at, 0)
z_scores <- HighFreq::roll_conv(matrix(z_scores), matrix(weight_s))
hist(z_scores, breaks=10000, xlim=c(-5*mad(z_scores), 5*mad(z_scores)))
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
exp(-0.05)
exp(-0.04)
lamb_da
lamb_da <- 0.04
weight_s <- exp(-lamb_da*1:long_back)
weight_s <- weight_s/sum(weight_s)
weight_s
runApp('C:/Develop/presentations/app_hampel_prices_volume_strat - Copy.R')
q()
ls()
library(HighFreq)
